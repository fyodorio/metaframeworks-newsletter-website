---
import { getCollection } from 'astro:content';

import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import IssueCard from '../../components/IssueCard.astro';
import { SITE_TITLE } from '../../consts';

export async function getStaticPaths() {
  const tags = await getCollection('tags');
  return tags.map((tag) => ({
    params: { tag: tag.data.id },
    props: { tag }
  }));
}

const { tag } = Astro.props;

const issues = (await getCollection('archive'))
  .filter(
    (item) => item.data.published && item.data.tags?.includes(tag.data.id)
  )
  .sort((a, b) => {
    if (b.data.pubDate && a.data.pubDate) {
      return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
    } else {
      return 0;
    }
  });
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={`${tag.data.name} - ${SITE_TITLE}`}
      description={`Issues tagged with ${tag.data.name}`}
    />
  </head>
  <body>
    <Header />
    <main>
      <h1>Issues tagged with "{tag.data.name}"</h1>
      <section>
        <ul>
          {
            issues.map((issue) => (
              <IssueCard
                title={issue.data.title}
                pubDate={issue.data.pubDate}
                description={issue.data.description}
                id={issue.id}
                tags={issue.data.tags}
                titleTag="h4"
              />
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>

<style>
  section {
    margin-top: 32px;
  }
  ul {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
</style>

